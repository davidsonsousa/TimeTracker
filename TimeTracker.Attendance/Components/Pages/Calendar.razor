@page "/calendar"
@using TimeTracker.Data.EditModels
@using TimeTracker.Data.ViewModels
@using TimeTracker.Services
@inject Service Service

<h1>Calendar</h1>

<h2>Form</h2>

<div>
    <div class="form-group">
        <label for="name">Name</label>
        <input class="form-control" bind="@calendarEditModel.Name" />
    </div>

    <div class="form-group">
        <label for="name">Home offices</label>
        <input class="form-control" bind="@calendarEditModel.HomeOfficeCapacity" />
    </div>

    <div class="form-group">
        <label for="name">Vacations</label>
        <input class="form-control" bind="@calendarEditModel.VacationCapacity" />
    </div>

    <div class="form-group">
        <label for="name">Sick days</label>
        <input class="form-control" bind="@calendarEditModel.SickDaysCapacity" />
    </div>

    <button class="btn btn-primary" onclick="@AddCalendar">Save</button>
</div>


@if (calendars != null && calendars.Count() > 0)
{
    <h2>List (@calendars.Count())</h2>

    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Home offices</th>
                <th>Vacations</th>
                <th>Sick days</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var calendar in calendars)
            {
                <tr>
                    <td>@calendar.Name</td>
                    <td>@calendar.HomeOfficeCapacity</td>
                    <td>@calendar.VacationCapacity</td>
                    <td>@calendar.SickDaysCapacity</td>
                </tr>
            }
        </tbody>
    </table>
}

@functions
{
    IEnumerable<CalendarViewModel> calendars = new List<CalendarViewModel>();
    CalendarEditModel calendarEditModel = new CalendarEditModel();

    protected override async Task OnInitAsync()
    {
        RefreshList();
    }

    void AddCalendar()
    {
        var returnValue = Service.SaveCalendar(calendarEditModel);

        if (!returnValue.IsError)
        {
            RefreshList();
        }
    }

    void RefreshList()
    {
        calendars = Service.GetCalendarsReadOnly();
    }
}